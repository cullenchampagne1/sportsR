name: Update Teams Release

on:
  push:
    paths:
      - '**/*'
  workflow_dispatch:

jobs:
  update-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.x

      - name: Get changed files
        id: changes
        run: |
          echo "files=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep '^data/processed/.*_teams_.*\.csv$' | xargs)" >> $GITHUB_OUTPUT

      - name: Check for changes
        if: steps.changes.outputs.files == ''
        run: echo "No matching files changed. Skipping." && exit 0

      - name: Get release tag by name
        id: get_release
        run: |
          release_tag=$(gh api repos/${{ github.repository }}/releases | jq -r '.[] | select(.name == "Teams") | .tag_name' | head -n 1)
          if [ -z "$release_tag" ]; then
            echo "No release found with name 'Teams'. Creating one."
            release_tag="v1.0.0"
            gh release create $release_tag --title "Teams" --notes "Initial release for Teams data"
          fi
          echo "release=$release_tag" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload new files to release
        run: |
          for file in ${{ steps.changes.outputs.files }}; do
            gh release upload ${{ steps.get_release.outputs.release }} "$file" --clobber
          done
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update release notes
        run: |
          base_note="This release provides structured CSV datasets containing detailed information about teams across multiple professional and collegiate sports leagues. The data has been meticulously collected from official sources and APIs, then processed into a clean, consistent format for easy use in analytics, applications, and research. For a detailed breakdown of data sources and table structures, please see the [Teams Documentation](/R/teams/readme.md)"

          timestamp=$(date -u +"%Y-%m-%d %H:%M UTC")
          note="\n\n\`\`\`Update on $timestamp\`\`\`\n"
          for file in ${{ steps.changes.outputs.files }}; do
            note+="- Updated \`$file\`\n"
          done

          echo -e "$base_note$note" > NEW_DESC.md

          gh release edit ${{ steps.get_release.outputs.release }} --notes-file NEW_DESC.md
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
