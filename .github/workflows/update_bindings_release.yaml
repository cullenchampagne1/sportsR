name: Update Bindings Release

on:
  push:
    paths:
      - 'data/models/espn-ncaa-binding-model.rds'
  workflow_dispatch:

jobs:
  export-and-release:
    runs-on: ubuntu-latest

    container:
      image: ghcr.io/YOUR_GITHUB_USERNAME/r-workflow:4.3.1

    permissions:
      contents: write
      packages: read

    steps:
      - name: Checkout repo (full history & tags)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Convert RDS to CSVs by Sport
        run: |
          mkdir -p output
          Rscript -e '
            sb <- readRDS("data/models/espn-ncaa-binding-model.rds")$sport_bindings
            for (s in unique(sb$sport)) {
              df <- sb[sb$sport == s, setdiff(names(sb), "sport")]
              write.csv(df,
                file.path("output", paste0(s, "_ncaa_espn_bindings.csv")),
                row.names = FALSE
              )
            }
          '

      - name: Determine (or default) release tag
        id: tag
        run: |
          TAG=$(gh api repos/${{ github.repository }}/releases \
               | jq -r '.[] | select(.name=="Team Bindings") | .tag_name' \
               | head -n1)
          if [ -z "$TAG" ]; then
            TAG="v1.0.0"
          fi
          echo "RELEASE_TAG=$TAG" >> $GITHUB_ENV

      - name: Delete old release and its tag (if they exist)
        run: |
          gh release delete ${{ env.RELEASE_TAG }} -y || echo "No existing release to delete"
          git tag -d ${{ env.RELEASE_TAG }}      || echo "No local tag to delete"
          git push origin :${{ env.RELEASE_TAG }} || echo "No remote tag to delete"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build release notes
        run: |
          echo -e "Hardcopy of NCAA and ESPN team bindings, sport-specific data files. In production, unbound teams are supplemented by the model. Also includes NCAA logo URLs and generated primary/secondary colors (\`magick\`-generated).\n\n\`Update on $(date -u +\"%Y-%m-%d %H:%M UTC\")\`" > NEW_DESC.md

      - name: Create new release & upload CSVs
        run: |
          gh release create ${{ env.RELEASE_TAG }} \
            --title "Team Bindings" \
            --notes-file NEW_DESC.md \
            output/*.csv
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
