name: Update Bindings Release

on:
  push:
    paths:
      - 'data/models/espn-ncaa-binding-model.rds'
  workflow_dispatch:

jobs:
  export-and-release:
    runs-on: ubuntu-latest

    container:
      image: ghcr.io/cullenchampagne1/sportsr:master

    permissions:
      contents: write
      packages: read

    steps:
      - name: Checkout repo (full history & tags)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Fix Git safe directory
        run: |
          # mark the checked-out repo as safe so git commands inside the container work
          git config --global --add safe.directory "$PWD"

      - name: Convert RDS to CSVs by Sport
        run: |
          mkdir -p output
          Rscript -e '
            sb <- readRDS("data/models/espn-ncaa-binding-model.rds")$sport_bindings
            for (s in unique(sb$sport)) {
              df <- sb[sb$sport == s, setdiff(names(sb), "sport")]
              write.csv(df,
                file.path("output", paste0(s, "_ncaa_espn_bindings.csv")),
                row.names = FALSE
              )
              saveRDS(df,
                file.path("output", paste0(s, "_ncaa_espn_bindings.rds"))
              )
            }
          '

      - name: Delete old “bindings” release and tag (if they exist)
        run: |
          gh release delete bindings -y || echo "No existing release named 'teams'"
          git tag -d bindings       || echo "No local tag 'teams' to delete"
          git push origin :bindings || echo "No remote tag 'teams' to delete"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build release notes
        run: |
          TIMESTAMP=$(date -u +"%Y-%m-%d %H:%M UTC")
          {
            echo "Hardcopy of NCAA and ESPN team bindings, these bindings are sport specific so make sure you are downlaoding the individaul files for whicher sport you are currently working on. In production teams not in this listing or supplimented by the model."
            echo
            echo "\`Update on $TIMESTAMP\`"
          } > NEW_DESC.md

      - name: Create new “teams” release & upload CSVs
        run: |
          gh release create bindings \
            --title "Team Bindings" \
            --notes-file NEW_DESC.md \
            output/*
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
