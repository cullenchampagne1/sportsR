name: Update Bindings Release

on:
  push:
    paths:
      - 'data/models/espn-ncaa-binding-model.rds'
  workflow_dispatch:

jobs:
  export-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - name: Checkout repo
      uses: actions/checkout@v4
      with:
          fetch-depth: 2

    - name: Set up R
      uses: r-lib/actions/setup-r@v2

    - name: Convert RDS to CSVs by Sport
      run: |
        mkdir -p output
         Rscript -e '
          sport_bindings <- readRDS("data/models/espn-ncaa-binding-model.rds")$sport_bindings
          for (sport in unique(sport_bindings$sport)) {
            sport_df <- subset(sport_bindings, sport == sport)[, !names(sport_bindings) %in% "sport"]
            csv_filename <- paste("output", paste0(sport, "_ncaa_espn_bindings.csv"), sep="/")
            write.csv(sport_df, csv_filename, row.names = FALSE)
          }
        '

    - name: Get release tag by name
      id: get_release
      run: |
        release_tag=$(gh api repos/${{ github.repository }}/releases | jq -r '.[] | select(.name == "Team Bindings") | .tag_name' | head -n 1)
        if [ -z "$release_tag" ]; then
          echo "No release found with name 'bindings'. Creating one."
          release_tag="v1.0.0"
          gh release create $release_tag --title "Team Bindings" --notes "Initial release for bindings data"
        fi
        echo "release=$release_tag" >> $GITHUB_OUTPUT
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload new files to release
      run: |
        for file in output/*.csv; do
          gh release upload ${{ steps.get_release.outputs.release }} "$file" --clobber
        done
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Update release notes
      run: |
          base_note="Hardcopy of NCAA and ESPN team bindings, these bindings are sport specific so when working with any data make sure to use the correct bindings file. These are also not all inclusive, in production unbound teams are supplemented with the model. Also included is a binding file for NCAA logo urls and generated primary and secondary colors, any link unlisted here are generated by the program using \`magick\`"

          timestamp=$(date -u +"%Y-%m-%d %H:%M UTC")
          note="\n\n\`\`\`Update on $timestamp\`\`\`\n"

          echo -e "$base_note$note" > NEW_DESC.md

          gh release edit ${{ steps.get_release.outputs.release }} --notes-file NEW_DESC.md
      env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}